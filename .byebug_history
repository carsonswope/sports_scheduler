c
@user.errors.full_messages[0]
@user.errors.full_messages
@user.errors.full_messages[0] = "Password must be 6 characters"
@user.errors.full_messages[0].start_with?('Password is too short')
@user.errors.full_messages[0].start_with?
@user.errors.full_messages[0]
@user.errors.full_messages
c
params
params[:format]
c
params
c
params
c
params[c
params
c
params
params[:format]
c
time[0..1] + ":" + time[2..3]
time[0..1]
time
c
@events.first.team_2.name
@events.first.team_1.name
@events.first
@events
c
@events
c
params
@events
c
@events
@event
c
@events.first.team_1.name
@events
@event
params
c
@events.to_a
@events
c
params
@event
c
event.team_2.name
event.team_2
event.team_@
event.team_1
event
c
@events.first.facility
@events.first.league
@events.first.team_2
@events.first.team_1
@events.first
@events
c
@events.length
@events
@user
params
@events
@events.first
@events
c
@events.length
@events
c
@user
c
@user
c
params
c
params
c
params
c
params
c
matchup[1]
matchup[0]
c
[0,2].sample
[0,1,2,3,4,5,6,7,8,9,10].each { |num| puts num % 3 }
[0,1,2,3,4,5,6,7,8,9,10].each { |num| puts (num/3).to_i }
[1,2,3,4,5,6,7,8,9,10].each { |num| puts (num/3).to_i }
[1..10].to_a.each { |num| puts (num/3).to_i }
[1..10].each { |num| puts (num/3).to_i }
[1..10].each { |num| puts (num/3).to_i
events
c
teams[0]
teams
c
gen_availability
c
GeneralAvailability.first
SpecificAvailability.first
SpecificAvailability
specific_availability
league.id
league
c
League
self
@user
User
c
username
params[:demo]
name
c
x
c
x
c
!!params[:demo]
params[:demo]
c
!!params[:demo]
params[:demo]
params
c
params
c
@available
@availability
c
@item_type
@time_slots
@available
@availability
c
params[:id]
params[:resource].constantize.find_by_id(params[:id])
params[:resource]
@available
c
@available
c
params[:resource].constantize
Object.const_defined?('League')
params[:resource]
@available
c
@time_slots
c
"abc".constantize
"League".constantize.find_by_id(params[:id])
"League".constantize.find_by(params[:id])
"League".constantize
params[:id]
params[:resource]
params
c
user.session_token
user
c
params
c
params
c
event_patch_params
params
c
params.require(:event).permit(:facility_id, :start_time, :date)
params.require(:event).permit(:facility_id, :start_time, :newGameDate)
params.require(:event).permit(:facility_id, :newGameTime, :newGameDate)
params
c
params.require(:event).permit(:facility_id, :newGameTime, :newGameDate)
params.require(:event).permit(:facility_id, :newGameTime)
params.require(:event).permit(:facility_id)
params.require(:event)
params
c
params
c
params[:league].has_key?('game_dates')
params.has_key?('league')
params.had_key('league')
params[:league]
params[:league][:game_dates][:specific]
params[:league][:game_dates]
params[:game_dates]
params[:league]
c
@availability
params
c
params[:date]
c
params[:date][:available_type]
params[:date]
params
c
@availability.class.to_s
@availability.class.to_string
@availability.class
@availability
c
params
c
league.specific_availabilities
c
league.specific_availabilities
league
c
l.general_availabilities
l.specific_availabilities
l
c
to_save[2]
to_save[1]
to_save[0]
to_save
c
params[:team][:game_dates][:specific]['0']
params[:team][:game_dates][:specific]['1']
params[:team][:game_dates][:general]['0']
params[:team][:game_dates][:general]
params[:team][:game_dates][:general][0]
params[:team][:game_dates][:general]
params[:team][:game_dates][:specific]
params[:team][:game_dates]
params
c
params
c
to_save[3]
to_save[2]
to_save[1]
to_save[0]
to_save
c
to_save[3]
to_save[2]
to_save[1]
to_save[0]
to_save
to_sve
c
LeagueFacilityMembership.find_from_league_and_facility(league_facility_params)[0]
league_facility_params
@league_facility_membership
c
league_facility_params
c
league_facility_params
